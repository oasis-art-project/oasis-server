Home: 
The current home page displays information from hardcoded data in frontend file. This data is displayed in the form of cards,
thanks to the Card View component from React and Bootstrap. We invision these cards to display information about ongoing or 
upcoming events where artist will exhibit their work. The next step would be enable it to display data stored in database.

SignUp: 
There are two signup forms, one is in frontend-yang and one is in frontend-cedric. We are currently use the one from 
Cedric, which is functional. The next step could be adding drop down menu at the page for different types of users.

Login: 
Current login form is function. Possible next step could be using backend API from the API document to authenticate 
user between  their input and the user information in database. 

EventDetails:
The Event's Detail Page is a page that would render information about a given event. Let's say the user was browsing on the
Home page and happened to see an event they were interested in learning more about, they would click "Learn More" in the 
card(refer to Home page to understand use of card view) of that event, and they would be directed to this page. Ideally, 
there would be an Event's Detail page about every event, where the user can see information like: The full title of the event,
a more detailed description of the event, venue details, the artist whose art work is being exhibited along with their details.
All that is left for this page is to get information from the backend to populate this with relevant information.

ArtistDetails:
Artist details is currently non functional. The next step would be to query the backend for the different data and fill it in 
on the artist card format. I was getting errors when it was talking to the backend. Verifying that the componetnDidMount 
function works as intended and correctly fills the information into the cards would be the next thing to do.
Attempting to access ArtistDetails staticly without it talkling to the backend is causing routing errors at the moment. 


Place Details:
Place details is currently non functional. The next step would be to query the backend for the data and fill it in on the 
place details card. The place details page should be very similar to the artist details page in terms of what to do next. 
It was getting the same types of errors with the backend. Attempting to access PlaceDetails even without the backend currently
causes routing errors. 

ArtistCard and PlaceCard: 
These cards I wrote are largely based off of Gahouray's work on the EventCard but with some changes that make it more 
relevant to places and artists as defined in wireframes and the schema. 




General things that are broken:
- it is possible to access certain pages via buttons (i.e. the login page) but not by url
- it is possible that run npm build gives a blank page, or changes made are not properly displayed on pages
